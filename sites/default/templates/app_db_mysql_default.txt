#!/usr/bin/env python2.6
# -*- coding: utf-8 -*-

import csv
import codecs
import cStringIO



services = {
    'app_db_mysql_default_.*_check_login' : {
        'description' : """
Misst, wie lange Verbindungsaufbau und Login dauern bzw. ob dieser überhaupt möglich ist.
""",
        'thresholds' : """
1 Sekunde, 5 Sekunden.
""",
    },
    'app_db_mysql_default_.*_check_uptime' : {
        'description' : """
Die Zeit seit dem DB-Start (erkennt DB-Crash+Restart). Wird eine Uptime von weniger als 5/10 Minuten gemessen, bedeutet das, dass die Datenbank vermutlich abgestürzt war.
""",
        'thresholds' : """
< 10 Minuten, < 5 Minuten
""",
    },
    'app_db_mysql_perf_.*_check_threads_conn' : {
        'description' : """
Anzahl der offenen Verbindungen.
""",
        'thresholds' : """
10, 20. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_threadcache_hits' : {
        'description' : """
Hitrate im Thread-Cache. Verbindungen können schneller aufgebaut werden, wenn sich die letzte Client-Sitzung noch im Cache befindet. Die Cache-Grösse ist mit thread_cache_size einstellbar.
""",
        'thresholds' : """
< 90, < 80. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_index_usage' : {
        'description' : """
Anteil der Index-Nutzung (im Ggs. zu Full Table Scans) von SELECT-Statements.
""",
        'thresholds' : """
< 90, < 80. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_qcache_hits' : {
        'description' : """
Hitrate im Query Cache. (Für wiederkehrende SQL-Statements ist bereits ein Execution-Plan verhanden). Kann mit query_cache_size getuned werden.
""",
        'thresholds' : """
< 90, < 80. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_qcache_prunes' : {
        'description' : """
Verdrängungen aus dem Query Cache wegen Speicherknappheit
""",
        'thresholds' : """
1, 10 pro Sekunde. 
""",
    },
    'app_db_mysql_perf_.*_check_myis_kcache_hits' : {
        'description' : """
Hitrate im Myisam Key Cache. Kann mit key_buffer_size getuned werden.
""",
        'thresholds' : """
< 99, < 98. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_inno_bpool_hits' : {
        'description' : """
Hitrate im InnoDB Buffer Pool. Kann mit innodb_buffer_pool_size getuned werden.
""",
        'thresholds' : """
< 99, < 95. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_inno_bpool_waits' : {
        'description' : """
Rate der InnoDB Buffer Pool Waits
""",
        'thresholds' : """
1, 10 pro Sekunde. 
""",
    },
    'app_db_mysql_perf_.*_check_inno_log_waits' : {
        'description' : """
Rate der InnoDB Log Waits
""",
        'thresholds' : """
1, 10 pro Sekunde. 
""",
    },
    'app_db_mysql_perf_.*_check_tcache_hits' : {
        'description' : """
Hitrate im Table-Cache. Kann mit table_cache getuned werden.
""",
        'thresholds' : """
< 99, < 95. Die Schwellwerte hängen stark von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_table_lock_cont' : {
        'description' : """
Rate fehlgeschlagener Tabellensperren. Wenn Datenbankprozess ändernden Zugriff auf eine Tabelle haben will, diese bereits aber von einem äquivaltenten Prozess gesperrt wurde, wird dieser Fehlschlag gezählt.
""",
        'thresholds' : """
1, 3 pro Sekunde. 
""",
    },
    'app_db_mysql_perf_.*_check_slow_queries' : {
        'description' : """
Rate von Queries, die als 'slow' erkannt wurden. Diese können protokolliert werden (log_slow_queries).
""",
        'thresholds' : """
0.1, 1 pro Sekunde. 
""",
    },
    'app_db_mysql_perf_.*_check_temp_tables' : {
        'description' : """
Prozent der temporären Tabellen, die auf Platte anstatt im Speicher angelegt wurden. Z.B. bei Sortiervorgängen werden temporäre Tabellen angelegt. Idealerweise befinden sich diese im Hauptspeicher. Aus Platzgründen kann es aber nötig sein, sie auf Platte auszulagern. (Tuning mit table_cache).
""",
        'thresholds' : """
< 99, < 95. Die Schwellwerte hängen von der Applikation ab.
""",
    },
    'app_db_mysql_perf_.*_check_longrunners' : {
        'description' : """
Anzahl der Datenbankprozesse, die schon länger als 1 Minute laufen.
""",
        'thresholds' : """
1, 20
""",
    },
}

dependencies = {
    'dependency_*_connection_uc' : """
Falls kein Datenbank-Login möglich ist, wird die Ausführung der anderen Checks gestoppt.
"""
}

if __name__ == '__main__':
    csvwriter = csv.writer(open('/tmp/app_db_mysql.csv', 'wb'), delimiter=';')
#        quotechar='|', quoting=csv.QUOTE_MINIMAL)
    for service in services:
        for key in services[service]:
            services[service][key] = services[service][key].replace('\n', '')
        csvwriter.writerow([service, services[service]['description'], services[service]['thresholds']])


